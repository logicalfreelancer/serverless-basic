# endpoints:
#   POST - https://lvi051chz3.execute-api.eu-north-1.amazonaws.com/dev/notes
#   PUT - https://lvi051chz3.execute-api.eu-north-1.amazonaws.com/dev/notes/{id}
#   DELETE - https://lvi051chz3.execute-api.eu-north-1.amazonaws.com/dev/notes/{id}
# functions:
#   create: notes-api-dev-create
#   get: notes-api-dev-get
#   list: notes-api-dev-list
#   update: notes-api-dev-update
#   delete: notes-api-dev-delete

# NOTE: update this with your service name
service: notes-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-north-1
  
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
    tableName: notes

  iamRoleStatements:
    
    - Effect: Allow
      Action:
      - dynamodb:Scan
      - dynamodb:Query
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
      - dynamodb:DescribeTable
    
      Resource: "arn:aws:dynamodb:eu-north-1:992890893258:*/*"

    

functions:
  # HTTP API endpoint that call main function in create.js
    create:
      handler: create.main
      events:
        - http:
            path: notes
            method: post

    get:
      handler: get.main
      event:
        - http:
            path: notes/{id}
            method: get

    list:
      handler: list.main
      event:
        - http:
            path: notes/
            method: get
    
    update:
      handler: update.main
      events:
        - http:
            path: notes/{id}
            method: put

    delete:
      handler: delete.main
      events:
        - http:
            path: notes/{id}
            method: delete